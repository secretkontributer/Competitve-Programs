// ART
// ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢟⣵⣿⣿⣿⣷⣦⣝⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⢿⠩⠑⣺⣿⣿⣦⣝⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠟⠁⣁⠟⠛⠛⠻⠿⣿⣿⣦⡈⠩⣤⣤⣽⣏⣋⡉⠉⣠⣥⣴⣾⠿⠙⠋⠻⠿⣷⣧⡙⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠱⠋⠉⠁⠀⠀⠀⠀⠀⣀⣈⣿⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣏⣀⡀⠀⠀⠀⠀⠁⠘⣿⣿⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⢋⠆⣐⣀⠔⠀⠀⢀⣀⣴⣾⣿⣿⣿⠟⠋⣈⣽⣿⣿⣿⣿⣿⣿⣿⣿⢿⣦⠀⠀⠀⠀⠀⢹⣿⣿⣿⣿⣬⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⣣⣿⣿⣿⡟⠁⢀⣴⣿⡟⢹⣿⣿⣉⠄⣠⣼⡟⡟⠛⣶⡄⢻⣿⣿⣿⣿⣧⠩⣿⣦⡀⠀⠀⠈⣿⣿⣿⣿⣿⣯⡻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣟⣼⢯⣿⣿⡏⢀⣴⣿⣿⡟⢀⣾⢻⡿⠋⣼⣿⣟⢰⡇⢰⣿⣷⠈⢿⣿⢻⣿⣿⣆⠸⣿⣷⡀⠀⠀⢿⣿⣿⣿⣿⣟⣿⣜⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠏⣼⣻⣿⣿⠋⢰⣾⣿⢿⡿⢁⡾⠁⠞⠀⡸⣿⣿⡇⣹⣿⣿⣿⣿⣆⠸⣿⠄⢻⣿⣿⣆⠹⢿⣿⡄⠀⢸⠿⣿⣿⣿⣿⣞⣿⡍⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠯⡾⠽⣽⣿⠇⢠⣿⠿⢁⣾⠗⡼⠃⠈⠀⢰⠣⣿⣿⠈⣿⣿⡿⣿⣿⣿⠀⠘⣶⠈⣿⣿⣿⣆⢸⣿⣷⠀⠈⠀⣿⣿⣿⣿⣿⣿⣿⡜⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣿⣿⡿⡵⣽⢫⣻⣿⡏⢀⣾⠋⢂⣾⠏⢀⡏⠀⠀⠀⡏⢰⣿⡿⢠⣿⣿⡇⢙⣿⣿⠀⠀⢻⡇⢸⣿⣿⣿⡟⣿⡿⡆⠀⠀⣿⣿⣿⣿⣿⣿⣿⣿⡜⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⡿⢋⣸⣹⢃⡾⣽⡿⠁⣾⡏⡂⣾⠏⠀⢸⠀⠀⠀⢠⠃⢸⣿⡇⢸⣿⣿⡇⠀⣿⣿⠀⠀⠀⢇⠈⣿⣿⣿⡇⣿⡇⢹⡀⠀⢹⣿⣿⣿⢿⣿⣿⣿⣿⠸⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣫⣥⣶⣿⠷⢎⢿⢇⣿⠁⢸⡟⠈⣼⠟⠀⠀⠈⠀⠀⠀⢸⠀⣿⣿⡇⢸⣿⡟⡇⠈⣿⣿⠀⠀⠀⠘⠀⢹⣿⣿⡇⢻⡇⣸⡅⠀⢸⣿⣿⣿⡞⣿⣿⣿⣿⡇⢻⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣿⣿⠂⡈⠠⣸⡏⠀⣿⠁⢤⡏⠀⠀⠀⠇⠀⠀⠀⢸⠀⣿⣿⣧⣼⣿⡿⢷⠀⣿⡟⠀⠀⠀⠀⠀⠸⣿⣿⡇⢸⣿⣿⡇⠀⢸⣿⣿⣿⣷⢻⣿⣿⣿⣷⠘⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣿⡏⠀⠀⡆⣿⠁⢠⡏⠀⡜⠀⠀⢀⡄⠀⠀⢠⡆⢸⠀⢸⣿⡏⢸⣿⡇⢸⡆⣿⠃⠀⠀⠀⠀⠀⠀⣿⣿⡇⢸⣿⢸⣿⠀⢸⣿⣿⣿⣿⢸⣿⣿⣿⢿⡀⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣿⡇⠀⢀⢱⡟⠀⣸⠁⢠⠃⠀⣰⣿⣇⠀⢠⣿⣇⢸⠀⠀⣿⡃⢸⣿⣧⠘⠷⠉⠀⠀⠀⡀⠀⠀⠀⢷⣿⡇⢸⣿⠠⣿⠀⢸⣿⣿⣿⣿⢸⣿⣿⣇⢸⠀⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣿⠇⠀⠸⢸⡇⠀⣿⠀⠀⠀⣰⣿⣿⣿⠀⣾⣿⣿⡘⠀⠀⣿⡇⢸⣿⣿⠀⢧⠀⠀⢀⣾⣿⡀⠀⠀⠀⢻⡇⢸⣿⠀⣿⡀⢸⣿⣿⣿⣿⠘⣿⣿⣿⢻⠃⢿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣿⠀⠀⢠⢸⡇⠀⣿⠀⠇⠀⠿⠿⢿⣿⡀⣿⣿⣿⣄⠇⠀⢸⡇⠈⣿⣿⡆⠀⠀⠀⡾⠿⢿⣗⡀⠀⠀⠀⠃⣼⣿⠀⣿⡇⠈⣿⣿⣿⣿⠀⣿⣿⡏⠘⣆⢸⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⡟⡀⠀⠀⢻⣇⠀⡏⠀⠀⣾⠟⠛⠓⠒⠦⠘⠭⣭⣇⣠⠀⡄⠇⠀⣿⠚⣧⠀⠠⠤⠐⠛⠻⠿⠿⠄⠀⠀⠀⣿⡿⢀⣿⡇⠀⣿⣿⣿⣇⠀⣿⣿⡇⢸⣿⢸⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⢇⡇⠀⠀⠸⣿⠀⠃⠀⠀⠁⠀⢀⠀⠀⠀⠀⠀⣾⣿⡄⠀⢀⠘⠀⢸⡄⠘⡄⠠⠂⠀⠀⠀⠀⠀⠀⠀⠀⠰⣿⡇⢸⣿⣷⠀⣿⡟⢻⡇⠀⢹⣿⡇⢸⣿⡾⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⡿⠴⠃⠀⠀⠀⣿⠀⢰⡄⠀⠀⣾⡏⠀⠀⠀⠀⠀⢺⣿⣧⠀⢸⡄⠀⢸⣧⠀⠱⠀⠆⠀⠀⠀⠀⠀⢰⣤⠀⠀⠀⡇⢸⣿⡏⠀⣿⣇⢸⡇⠀⢸⣿⡇⢸⣿⡇⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣧⠀⠀⠀⠀⢸⣿⡀⠘⠀⠀⣾⣿⡷⠀⠀⠀⢠⡄⢸⣿⣿⣆⠀⣷⠀⠸⠿⡆⠀⠄⣠⡤⠀⠀⣤⠀⢠⣿⡇s⠀⠈⣧⣼⣿⡇⢠⣿⡿⣿⡇⠀⢸⣿⡇⢸⠛⡇⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⡀⡀⠀⠀⠀⢸⢻⡇⠀⡆⠀⣿⣿⣷⡀⢤⣴⡆⣠⣿⣿⣿⣿⡆⢻⣧⣾⣷⣶⣶⣶⣦⡀⠀⠠⠄⢀⣾⣿⠃⡎⢺⠀⣿⣿⡇⢸⣿⠀⣿⠇⠀⣾⣿⡇⠘⠀⢁⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣀⠀⠀⠀⠀⠘⠸⣿⡀⢹⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⣹⣿⣦⣿⣿⣿⣿⣿⣿⣿⣿⣷⣿⣷⣿⡿⣿⠀⡇⠈⢰⠇⣿⠀⣾⣿⠀⣿⠀⠀⣿⣿⠇⠀⢀⣾⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⠀⠀⠀⠀⡄⠀⢿⣷⠈⢧⠈⠻⣿⣿⠿⠿⠿⠿⣿⣿⣷⣾⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠀⠀⠐⣼⠀⣿⠀⣿⣿⠀⣿⠀⠀⣿⣿⠀⠀⣾⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⡇⠀⢠⠀⠀⠀⠀⠘⠿⠷⠄⠀⠈⣉⡁⠀⠐⠒⠒⠛⠛⠠⠤⠤⠤⠤⠐⠛⠋⠉⢉⣉⡉⢽⡟⠛⠛⠿⢟⠀⠀⠀⢿⠀⡇⠀⢿⡟⠀⣿⠀⠀⣿⣿⢀⣲⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⡇⣷⣾⠀⠀⠀⠀⠀⠀⠀⠀⢰⣿⣿⣿⣿⢿⣿⣿⣿⣷⣶⣶⣶⣶⣶⣶⣶⣦⣤⣤⣤⣤⣤⣤⣤⣤⣤⡄⠀⠀⢰⡏⠀⡇⠀⢸⡇⠀⣿⠀⢀⡿⢿⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣷⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠈⡿⣟⣿⣿⣾⣿⣿⣿⣏⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡟⠀⠀⢸⡇⠀⡇⠀⢸⡇⠀⢻⠀⢸⡇⢸⢸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⡟⣿⣿⡇⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣷⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠃⠀⢀⣼⠃⠀⡇⠀⢸⣇⡆⠸⠀⢸⣇⣸⡟⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣇⢿⣿⣿⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠁⠀⠀⠀⢹⠀⠀⡇⠀⣼⢸⡇⣠⡀⠈⣿⠙⣇⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣇⠘⣿⣿⠃⠀⠀⠀⠀⠀⠀⠀⢠⠀⠀⠀⠈⠙⠻⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⠿⠛⠉⠁⠀⠀⠀⣀⣄⡀⣺⠀⠀⡇⠀⠏⣾⣟⠀⠀⠀⣿⠀⡏⢹⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣄⠈⠋⠀⠀⠀⠀⠀⠀⠀⠀⢸⣷⣦⣀⠀⠀⠀⠀⠉⠻⣿⣿⣿⣿⠿⠟⠋⠉⠀⠀⠀⠀⠀⠀⠀⠈⠙⠃⡇⣿⠀⠀⡇⠀⢰⣿⣿⡤⠀⠀⢿⡶⣷⠺⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⣿⡷⠀⡄⠀⠀⠀⠀⠆⠀⠀⢸⣿⣿⣿⣿⣷⣶⣶⣾⠗⡠⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡇⡇⠀⠀⠇⠀⢾⣿⣿⣿⣅⠀⢸⣿⣿⣀⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⣿⢟⣼⢰⠃⠀⠀⠀⠀⠀⠀⠀⢸⣿⣿⣿⣿⣿⣿⣿⢰⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⢠⢰⠀⡇⠀⢸⠀⠀⣾⣿⣿⣿⣿⠀⢸⣿⣸⡏⢻⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⠏⣾⢇⠇⢀⠀⢠⡀⠀⠀⣾⠀⠈⣿⣿⣿⣿⣿⣿⠇⣿⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣴⡟⠃⠀⣀⣴⣿⣞⢧⡇⠀⠸⠀⡴⣿⣿⣿⣿⣿⡇⢸⡿⡟⡇⣸⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣟⢹⠏⡘⢀⣾⢀⣾⡇⠀⠄⣿⣧⠀⣿⣿⡿⢟⣛⣍⣾⣿⣿⡆⠀⠀⢀⣀⣠⣤⣾⡿⠛⠉⣀⣤⣾⣿⣿⣿⣿⣷⠀⠀⠀⠀⢀⣼⣿⣿⣿⣿⡇⢸⡇⡇⡇⢹⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⣿⡚⢀⣇⣾⡏⣸⣿⣧⠀⢧⣿⣿⡆⠛⣋⢸⣿⣯⣿⣿⣿⣿⣿⣆⠀⠀⣿⠟⠉⢁⣠⣴⣿⣿⣿⣿⣿⣿⣿⣿⣿⡀⠀⠀⠀⢸⢹⣿⣿⣿⣿⠇⡸⣹⡇⣇⣼⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⣿⡿⠀⢰⣿⣏⠁⣉⣥⡄⢸⠚⣿⡏⣇⣸⣿⡞⣿⣿⣿⣿⣿⣿⣿⡟⢀⠀⠀⠀⠀⠘⢿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⠈⡆⣌⣉⣛⠻⠠⢡⣿⡇⣈⣿⣿⣿⣿⣿⣿⣿⣿⣿
// ⣿⣿⣿⡟⡀⠀⠈⣿⣿⡀⢻⢿⡇⢸⠀⣿⢇⢸⠉⣿⣷⡸⣿⣿⣿⣿⣿⠟⣰⣿⡷⣄⡀⢠⣤⣤⠹⣿⣿⣿⣿⣿⣿⣿⣿⣿⡷⡀⠀⡇⠀⠘⡘⣿⣿⠃⢀⣶⣦⠁⣈⣛⣻⠟⠛⠻⠻⠿⣿⣿
// ⣿⣿⡿⣱⣿⡆⣶⡹⠇⣷⡐⣦⣌⠘⠀⡏⢸⡎⠀⣿⣿⣷⠙⣿⣿⣿⡏⣸⣿⣿⣗⣼⠗⣾⣿⣿⡇⢽⣿⣿⣿⣿⣿⣿⠟⢋⣴⣷⣄⠁⣀⠀⠣⠙⢁⣴⣿⣿⡟⣰⣿⣿⣿⣿⣿⣿⣷⣦⡈⢻
// ⣿⡿⢁⣿⣿⣆⢹⣿⣬⣿⣷⡹⣿⡄⠘⢀⣶⣭⡀⣿⣿⣿⣧⣈⠿⡿⠀⠈⢿⣿⣿⣿⢧⣿⣿⠟⠁⡜⣿⣿⡿⡟⣋⣔⣴⣿⣿⣿⣏⢷⣄⣿⣶⣌⡹⣿⣿⣿⣱⣿⣿⣿⣿⣿⣿⣿⠿⣿⣿⡅
// ⡿⠁⣸⣿⣿⣿⣇⢿⣿⣿⣿⣿⣿⣷⠀⢸⣿⣿⣿⣿⣿⣿⣿⣿⣷⣶⣾⣷⠘⣿⣿⣿⣸⣯⣥⣴⣾⣿⣿⣽⣶⣿⣿⣿⣿⣿⣿⣿⣿⣾⣿⣿⣿⣿⣿⣿⠹⣿⣿⣿⣿⣿⣿⣿⠟⣡⣾⣿⣿⣷
// oni-chan
#include <bits/stdc++.h>
typedef double dl;
typedef unsigned long ul;
typedef long long int ll;
using namespace std;
// use global variables
// try to define space before;
// bool prime[1000010];
// void SieveOfEratosthenes(int n)
// {
//     memset(prime, true, sizeof(prime));
//     for (int p = 2; p * p <= n; p++) {
//         if (prime[p] == true) {
//             for (int i = p * p; i <= n; i += p)
//                 prime[i] = false;
//         }
//     }
// long long compute_hash(string str)
// {
//   const int p = 31;
//   const int m = 1e9 + 9;
//   long long hash_value = 0;
//   long long p_pow = 1;
//   for (auto c : str)
//   {
//     hash_value = (hash_value + (c - 'a' + 1) * p_pow) % m;
//     p_pow = (p_pow * p) % m;
//   }
//   return hash_value;
// }
ll mod = 1e9 + 7;
int n;
int m;
int dp[1010][1010];
char arr[1010][1010];
void solve()
{
  cin >> n;
  cin>>m;
  for (int i = 0; i < n; i++)
  {
    for (int j = 0; j < m; j++)
    {
      cin >> arr[i][j];
    }
  }
  for (int i = 0; i < n; i++)
  {
    for (int j = 0; j < m; j++)
    {
      dp[i][j] = 0;
      if (i == 0 && j == 0)
      {
        if (arr[0][0] != '#')
        {
          dp[0][0] = 1;
        }
        else
        {
          dp[0][0] = 0;
        }
      }
      else if (arr[i][j] == '#')
      {
        dp[i][j] = 0;
      }
      else
      {
        if (i > 0)
        {
          dp[i][j] += dp[i - 1][j];
          dp[i][j] %= mod;
        }
        if (j > 0)
        {
          dp[i][j] += dp[i][j - 1];
          dp[i][j] %= mod;
        }
        dp[i][j] %= mod;
      }
    }
  }
  cout << dp[n - 1][m - 1] << "\n";
}
int main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);

  solve();

  return 0;
}
// competitive programming syn